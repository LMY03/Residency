<% const path = "https://raw.githubusercontent.com/LMY03/Residency/main/"; %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>Tap Tap & Go</title>
    <link rel="icon" href="<%=path%>/public/img/icon.png" type="image/x-icon" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />

    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            display: none;
        }

        a:hover {
            cursor: default;
        }

        /* New CSS for the clock-in/clock-out system */
        .header {
            background-color: #4CAF50; /* Primary green background color */
            padding: 20px;
            border-bottom-left-radius: 20px; /* Rounded lower left edge */
            border-bottom-right-radius: 20px; /* Rounded lower right edge */
            position: relative;
        }

        .header img {
            max-width: 200px; /* Adjust the size of the rectangular image */
            display: block;
            margin: 0 auto;
        }

        .logo img {
            max-width: 150px; /* Adjust the size of the circular green logo */
            border-radius: 50%;
            display: block;
            margin: 0 auto;
        }

        .container {
            background-color: white; /* White background for the content container */
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        }

        .employee-list {
            display: flex;
            flex-wrap: wrap;
            justify-content: flex-start;
        }

        .employee-card {
            border: 1px solid #065e00; /* Green border for employee cards */
            border-radius: 10px;
            margin: 10px;
            padding: 10px;
            text-align: center;
            width: 200px; /* Adjust the width of the employee cards as needed */
        }

        #input {
            width: 80%; /* Make the input almost as long as its container */
            border: 2px solid #4CAF50; /* Green border for the input */
            border-radius: 10px; /* Rounded edges for the input */
            padding: 10px;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo"><img src="<%=path%>/public/img/icon.png" alt="APP Logo" /></div>
        <a href="/report"><img src="<%=path%>/public/img/heading.png" alt="Tap Tap & Go" /></a>
        
    </div>

    <div class="container">
        <h1>Oras: <span id="timePlaceholder"></span></h1>
        <div>
            <!-- Employee ID input will be automatically submitted when changed -->
            <form action="/clock" method="post" id="myForm" name="myForm">
                <input type="number" id="input" name="input" onchange="handleInput()" />
            </form>
        </div>
    </div>

    <!-- Employee List -->
    <div class="container">
        <h2>Mga Tao</h2>
        <div class="employee-list">
            <!-- Sample Employee Card (You can loop through your employee data to create cards) -->
            <%  dailyRecords.forEach(row => { %>
                <div class="employee-card">
                    <h3><%=row.Name%></h3>
                    <p>ID: <%=row.ID%></p>
                    <p><%=row.Position%></p>
                    <p>Clocked 
                        <% if (row.ClockOutTime) {%> 
                            Out: <%=row.ClockOutTime %>
                        <% } else { %> 
                            In: <%=row.ClockInTime %>
                        <% } %>
                    </p>
                </div>
            <%  }); %>    

            <!-- Add more employee cards as needed -->
        </div>
    </div>

    <script>
        const employeeIDInput = document.getElementById('input');
        function handleInput() {
            const inputValue = employeeIDInput.value;
            console.log(inputValue)
            // Check if the input is an 8-digit number
            if (/^\d{8}$/.test(inputValue)) {
                // Run your custom function here
                // For example, you can display a message, record the time in, etc.
                // console.log(`Employee ID entered: ${inputValue}`);
                document.getElementById('myForm').submit();
            }
        }
        employeeIDInput.focus();
        employeeIDInput.addEventListener('input', handleInput);

        document.addEventListener('DOMContentLoaded', function () {
            const timePlaceholder = document.getElementById('timePlaceholder');

            function updateTime() {
                fetch('/get-time') // Send an AJAX request to the server
                    .then(response => response.json())
                    .then(data => {
                        const time = data.time;
                        timePlaceholder.textContent = time; // Update the content on the page
                    })
                    .catch(error => {
                        console.error('Error fetching time:', error);
                    });
            }

            // Initial time update
            updateTime();

            // Update the time every second (1000 milliseconds)
            setInterval(updateTime, 1000);
        });
    </script>
</body>
</html>
